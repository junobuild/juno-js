#!/usr/bin/env bash

function rm_agent() {
  local package=$1

  npm rm @icp-sdk/core --workspace=packages/"$package"
}

function install_agent() {
  local package=$1

  npm i @icp-sdk/core@latest --workspace=packages/"$package"
}

function install_agent_peer() {
  local package=$1

  npm i @icp-sdk/core@latest --workspace=packages/"$package" --save-peer
}

function install_agent_auth_client() {
  local package=$1

  npm i @icp-sdk/auth@latest --workspace=packages/"$package"
}

function install_agent_auth_client_peer() {
  local package=$1

  npm i @icp-sdk/auth@latest --workspace=packages/"$package" --save-peer
}

PACKAGES=core-standalone
PACKAGES_PEER=admin,cdn,ic-client,storage,core,core-peer,functions
PACKAGES_AUTH_CLIENT=core-standalone
PACKAGES_AUTH_CLIENT_PEER=core,core-peer

# Remove agent-js libraries from all packages first to avoid resolve conflicts between those
for package in $(echo $PACKAGES | sed "s/,/ /g"); do
  rm_agent "$package"
done

for package in $(echo $PACKAGES_PEER | sed "s/,/ /g"); do
  rm_agent "$package"
done

for package in $(echo $PACKAGES | sed "s/,/ /g"); do
  install_agent "$package"
done

for package in $(echo $PACKAGES_PEER | sed "s/,/ /g"); do
  install_agent_peer "$package"
done

for package in $(echo $PACKAGES_AUTH_CLIENT | sed "s/,/ /g"); do
  install_agent_auth_client "$package"
done

for package in $(echo $PACKAGES_AUTH_CLIENT_PEER | sed "s/,/ /g"); do
  install_agent_auth_client_peer "$package"
done
